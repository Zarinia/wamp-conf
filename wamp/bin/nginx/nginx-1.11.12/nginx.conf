
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid         logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
	charset utf-8;
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;
	error_log 	logs/error.log;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	index index.htm index.html index.php index.asp index.jsp;

    server {
        listen       8080 default; ## listen for ipv4; this line is default and implied
        listen       192.168.1.3:8080; ## 192.168.1.5:8080; old host
		listen 	     [::]:8080 default ipv6only=on; ## listen for ipv6
        server_name  localhost;

        #charset koi8-r;

        access_log  logs/host.access.log  main;

        location / {
            root   c:/wamp/www/;
            index  index.html index.htm index.php index.php3 index.php4 index.php5;
			autoindex on; ## enable 'file browser' mode
        }
		
		location /icons {
            # alias /usr/share/apache2/icons; # for ubuntu and debian
            alias c:/wamp/bin/apache/apache2.4.18/icons; # for windows
        }
		
		location /htdocs {
            alias c:/wamp/bin/apache/apache2.4.18/htdocs; # for windows
        }
		
		location /pma {
			alias c:/wamp/www/phpMyAdmin-4.6.4-all-languages;
			# index  index.php;
		}
		location /phpmyadmin {
			alias c:/wamp/apps/phpmyadmin3.5.1;
			# index  index.php;
		}
		
		location /cakesky {
			# root c:/wamp/www/cakesky/app/webroot;
			alias c:/wamp/www/cakesky/app/webroot;
			# rewrite ^(.*) http://localhost/cakesky$1 permanent;
		}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        # location ~ \.(php[345]?|asp|jsp)$ {
           # proxy_pass   http://127.0.0.1:80;
        # }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.(php[345]?|asp|jsp)$ {
            root           c:/wamp/www/;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.(ht|git|svn) {
            deny  all;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    server {
		# see https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04
		# see https://devcenter.heroku.com/articles/ssl-certificate-self
		listen       4433 ssl;
		listen 	     [::]:4433 ssl ipv6only=on; ## listen for ipv6
		server_name  localhost;

		# ssl_certificate      ssl/server.pem;
		ssl_certificate      ssl/server.crt;
		ssl_certificate_key  ssl/server.key;

		ssl_session_cache    shared:SSL:1m;
		ssl_session_timeout  5m;

		ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers  HIGH:!aNULL:!MD5;
		ssl_prefer_server_ciphers  on;

		access_log  logs/host.access.log  main;

        location / {
            root   c:/wamp/www/;
            index  index.html index.htm index.php index.php3 index.php4 index.php5;
			autoindex on; ## enable 'file browser' mode
        }
    }
	
	    	
	##
	# Virtual Host Configs
	##
    include nginx-vhosts.conf;
    include nginx-vdh.conf;
}
